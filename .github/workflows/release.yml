name: Release
on:
  release:
    types: [published]

jobs:
  deploy:
    name: Deploy Release to Package Repo
    environment: release
    runs-on: ubuntu-latest
    container:
      image: "registry.digitalocean.com/anemoi/bazelbase:latest"
      credentials:
        username: ${{ secrets.digitalocean_token }}
        password: ${{ secrets.digitalocean_token }}
      env:
        BAZELDIST_USERNAME: ${{ secrets.bazeldist_user }}
        BAZELDIST_PASSWORD: ${{ secrets.bazeldist_token }}
        GITHUB_ACTOR: Jtrim777
        GITHUB_EMAIL: jatrimble777@gmail.com
        GITHUB_TOKEN: ${{ secrets.XREPO_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: |
          VTAG="${{ github.event.release.tag_name }}" 
          XVZN=$(echo "$VTAG" | sed -E 's|v||g')
          ISNAP=$(echo -n "-$XVZN" | tr -dc '-' | awk '{ print length; }')
          RTYP=$([ $ISNAP -eq 1 ] && echo -n "release" || echo -n "snapshot")
          echo "RELEASE_VERSION=$XVZN" >> $GITHUB_ENV
          echo "RELEASE_TYPE=$RTYP" >> $GITHUB_ENV
      - name: Install GCC
        run: /usr/bin/installgcc
      - name: Load Bazel
        run: bazel info
      - name: Update version refs
        run: |
          OLDVZN=$(cat VERSION)
          echo -n "${{ env.RELEASE_VERSION }}" > VERSION
          sed -i "s/$OLDVZN/${{ env.RELEASE_VERSION }}/g" package/man/jvmutil.man
      - name: Deploy package
        run: bazel run //:deploy-pkg -- $RELEASE_TYPE
      - name: Deploy formula
        run: bazel run //:deploy-formula -- $RELEASE_TYPE
      - name: Commit version update
        uses: EndBug/add-and-commit@v7
        with:
          author_name: GitHub Actions
          author_email: Jtrim777
          message: 'Update versioning info'
          branch: main
          pull: 'NO-PULL'
          push: true
          tag: 'v${{ env.RELEASE_VERSION }} --force'
  modify_release:
    name: Update GitHub Release Info
    environment: release
    runs-on: ubuntu-latest
    if: ${{ github.event.release.prerelease }} != true
    needs: deploy
    steps:
      - uses: actions/checkout@v2
      - name: Get Previous Tag
        id: get_tags
        run: |
          git fetch -a
          echo ::set-output name=current_tag::$(git tag --sort "-committerdate" | sed '/-/d' | sed -n 1p)
          echo ::set-output name=previous_tag::$(git tag --sort "-committerdate" | sed '/-/d' | sed -n 2p)
      - uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ github.event.release.id }}
          body: |
            **Full Changelog:** [${{ steps.get_tags.outputs.previous_tag }}...${{ steps.get_tags.outputs.current_tag }}](https://github.com/jtrim777-dev/jvmutil/compare/${{ steps.get_tags.outputs.previous_tag }}...${{ steps.get_tags.outputs.current_tag }})
            Artifacts Published to [Jtrim777 Artifact Repository](https://maven.jtrim777.dev/#/releases/dev/jtrim777/jvmutil/${{ steps.get_tags.outputs.current_tag }})
